var creepFindtask = {
    run: function (creep) {
        // ÂÇ®ËÉΩ
        var Harvester_task = creep.room.find(FIND_STRUCTURES, {
            // ‰ΩøÁî®`FIND_STRUCTURES`Êü•ÊâæÊàøÈó¥ÂÜÖÁöÑÊâÄÊúâÂª∫Á≠ëÁªìÊûÑ
            filter: function (structure) {
                // ‰ΩøÁî®ËøáÊª§Âô®ÂáΩÊï∞ÂØπÊâæÂà∞ÁöÑÂª∫Á≠ëÁªìÊûÑËøõË°åÁ≠õÈÄâ
                return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&
                    // ÈÄâÊã©Âª∫Á≠ëÁªìÊûÑÁ±ªÂûã‰∏∫`STRUCTURE_EXTENSION`Êàñ`STRUCTURE_SPAWN`‰∏îÂÆÉ‰ª¨ÁöÑËÉΩÈáèÂ≠òÂÇ®ÂÆπÈáèÂ§ß‰∫é0
                    structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;
            }
        });
        if (Harvester_task.length > 0) {
            // Â¶ÇÊûúCreep‰∏çÂú®targets[0]ÁöÑËåÉÂõ¥ÂÜÖÔºåÂàôÁßªÂä®Âà∞targets[0]ÁöÑ‰ΩçÁΩÆ
            if (creep.transfer(Harvester_task[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                creep.say('üìÅ', true)
                creep.moveTo(Harvester_task[0], { visualizePathStyle: { stroke: '#00dc91' } });
                return;
            }
        }

        // ‰øÆÂª∫
        var Builder_task = creep.room.find(FIND_CONSTRUCTION_SITES);
        if (Builder_task.length > 0) {
            if (creep.build(Builder_task[0]) == ERR_NOT_IN_RANGE) {
                creep.say('üöß', true);
                creep.moveTo(Builder_task[0], { visualizePathStyle: { stroke: '#ff8982' } });
                return;
            }
        }

        // ‰øÆÂ§ç
        var Repair_task = creep.room.find(FIND_STRUCTURES, {
            filter: object => object.hits < object.hitsMax
        });
        if (Repair_task.length > 0) {
            Repair_task.sort((a, b) => a.hits - b.hits);
            if (creep.repair(Repair_task[0]) == ERR_NOT_IN_RANGE) {
                creep.say('üîß', true);
                creep.moveTo(Repair_task[0], { visualizePathStyle: { stroke: '#00c5fc' } });
                return;
            }
        }

        // ÂçáÁ∫ß
        if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {
            creep.moveTo(creep.room.controller, { visualizePathStyle: { stroke: '#aa8b66' } });
            return;
        }
    }

};

module.exports = creepFindtask;